name: COPRS PRO Documentation Export 

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+-rc[0-9]+"
  workflow_dispatch:

jobs:
  generate_coprs_pro_add:
    continue-on-error: true
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
          
      - name: make output dir
        id: make_output_dir
        run: mkdir output # create output dir

      - name: Create PDF
        uses: docker://ghcr.io/coprs/reference-system-software:dependencies_pandoc_latex
        with:
          args: -s --resource-path="/github/workspace/components/production common/media/add:/github/workspace/components/processing workflow S1/images:/github/workspace/components/processing workflow S3/images" --listings -H /root/.pandoc/listings-setup.tex -H /root/.pandoc/deeplists.tex -V geometry:margin=1in --table-of-contents --pdf-engine=xelatex --output="output/COPRS-PRO-ADD.pdf" --from=markdown "./components/production common/Architecture Design Document.md" "./components/processing workflow S1/S1 Processing Workflow.md" "./components/processing workflow S3/S3 Processing Workflow.md"

      - uses: actions/upload-artifact@master
        with:
          name: documentation
          path: output

  generate_coprs_pro_im:
    continue-on-error: true
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
          
      - name: make output dir
        id: make_output_dir
        run: mkdir output # create output dir

      - name: Create PDF
        uses: docker://ghcr.io/coprs/reference-system-software:dependencies_pandoc_latex
        with:
          args: -s --listings -H /root/.pandoc/listings-setup.tex -H /root/.pandoc/deeplists.tex -V geometry:margin=1in --table-of-contents --pdf-engine=xelatex --output="output/COPRS-PRO-IM.pdf" --from=markdown "./components/production common/Installation Manual.md"

      - uses: actions/upload-artifact@master
        with:
          name: documentation
          path: output

  generate_coprs_pro_svd:
    continue-on-error: true
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
          
      - name: make output dir
        id: make_output_dir
        run: mkdir output # create output dir

      - name: Create PDF
        uses: docker://ghcr.io/coprs/reference-system-software:dependencies_pandoc_latex
        with:
          args: -s --listings -H /root/.pandoc/listings-setup.tex -H /root/.pandoc/deeplists.tex -V geometry:margin=1in --table-of-contents --pdf-engine=xelatex --output="output/COPRS-PRO-SVD.pdf" --from=markdown "./components/processing workflow S1/Software Verification and Validation Test Document.md"

      - uses: actions/upload-artifact@master
        with:
          name: documentation
          path: output

  generate_coprs_pro_rep_s1:
    continue-on-error: true
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
          
      - name: make output dir
        id: make_output_dir
        run: mkdir output # create output dir

      - name: Create PDF
        uses: docker://ghcr.io/coprs/reference-system-software:dependencies_pandoc_latex
        with:
          args: -s --listings -H /root/.pandoc/listings-setup.tex -H /root/.pandoc/deeplists.tex -V geometry:margin=1in --table-of-contents --pdf-engine=xelatex --output="output/COPRS-PRO-REP-S1.pdf" --from=markdown "./components/processing workflow S1/PRO Software E2E S1 Test Report/COPRS-PRO-REPORT-S1-V1.0.md"

      - uses: actions/upload-artifact@master
        with:
          name: documentation
          path: output
          
  generate_coprs_pro_rep_s3:
    continue-on-error: true
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
          
      - name: make output dir
        id: make_output_dir
        run: mkdir output # create output dir

      - name: Create PDF
        uses: docker://ghcr.io/coprs/reference-system-software:dependencies_pandoc_latex
        with:
          args: -s --listings -H /root/.pandoc/listings-setup.tex -H /root/.pandoc/deeplists.tex -V geometry:margin=1in --table-of-contents --pdf-engine=xelatex --output="output/COPRS-PRO-REP-S3.pdf" --from=markdown "./components/processing workflow S3/PRO Software E2E S3 Test Report/COPRS-PRO-REPORT-S3-V1.0.md"

      - uses: actions/upload-artifact@master
        with:
          name: documentation
          path: output
          
  generate_coprs_pro_scf:
    continue-on-error: true
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      
      - name: create file list
        id: files_list
        run: |
          find "components/production common/Software Configuration File" -type f -name "*.md" ! -name "README.md" | sort -V | awk '{ print "\""$0"\""}' | tr -s '\n' ' ' > list.txt
          # this will not include README.md
          # echo "::set-output name=files::$(printf '"%s" ' *.md)"
          echo "::set-output name=files::$(cat list.txt)"
          
      - name: make output dir
        id: make_output_dir
        run: mkdir output # create output dir

      - name: Create PDF
        uses: docker://ghcr.io/coprs/reference-system-software:dependencies_pandoc_latex
        with:
          args: -s --listings -H /root/.pandoc/listings-setup.tex -H /root/.pandoc/deeplists.tex -V geometry:margin=1in --table-of-contents --pdf-engine=xelatex --output="output/COPRS-PRO-SCF.pdf" --from=markdown "./components/production common/Software Configuration File/README.md" ${{ steps.files_list.outputs.files }}

      - uses: actions/upload-artifact@master
        with:
          name: documentation
          path: output
          
  generate_coprs_pro_um:
    continue-on-error: true
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
          
      - name: make output dir
        id: make_output_dir
        run: mkdir output # create output dir

      - name: Create PDF
        uses: docker://ghcr.io/coprs/reference-system-software:dependencies_pandoc_latex
        with:
          args: -s --resource-path="/github/workspace/components/production common/media/sum" --listings -H /root/.pandoc/listings-setup.tex -H /root/.pandoc/deeplists.tex -V geometry:margin=1in --table-of-contents --pdf-engine=xelatex --output="output/COPRS-PRO-UM.pdf" --from=markdown "./components/production common/Installation Manual.md"
          
      - uses: actions/upload-artifact@master
        with:
          name: documentation
          path: output

  generate_coprs_pro_trace_icd:
    continue-on-error: true
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
          
      - name: make output dir
        id: make_output_dir
        run: mkdir output # create output dir

      - name: Create PDF
        uses: docker://ghcr.io/coprs/reference-system-software:dependencies_pandoc_latex
        with:
          args: -s --listings -H /root/.pandoc/listings-setup.tex -H /root/.pandoc/deeplists.tex -V geometry:margin=1in --table-of-contents --pdf-engine=xelatex --output="output/COPRS-PRO-TRACE-ICD.pdf" --from=markdown "./components/production common/TRACE Interface Control Document.md"
          
      - uses: actions/upload-artifact@master
        with:
          name: documentation
          path: output

  generate_coprs_pro_rest_icd:
    continue-on-error: true
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      
      - name: create file list
        id: files_list
        run: |
          find "components/production common/REST-API Interface Control Document" -type f -name "*.md" | sort -V | awk '{ print "\""$0"\""}' | tr -s '\n' ' ' > list.txt
          # this will also include README.md
          # echo "::set-output name=files::$(printf '"%s" ' *.md)"
          echo "::set-output name=files::$(cat list.txt)"
          
      - name: make output dir
        id: make_output_dir
        run: mkdir output # create output dir

      - name: Create PDF
        uses: docker://ghcr.io/coprs/reference-system-software:dependencies_pandoc_latex
        with:
          args: -s --listings -H /root/.pandoc/listings-setup.tex -H /root/.pandoc/deeplists.tex -V geometry:margin=1in --table-of-contents --pdf-engine=xelatex --output="output/COPRS-PRO-REST-ICD.pdf" --from=markdown ${{ steps.files_list.outputs.files }}

      - uses: actions/upload-artifact@master
        with:
          name: documentation
          path: output
